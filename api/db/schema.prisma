// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

// datasource db {
//   provider = "postgres"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// GigListing model representing gig listings

model GigListing {
  id        String   @id @default(cuid())
  title     String
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  creator   User     @relation(name: "CreatedBy", fields: [userId], references: [id])
  attendees User[]   @relation(name: "Attending")
  userId    Int
}

model User {
  id                  Int          @id @default(autoincrement())
  name                String?
  email               String       @unique
  avatar              String?
  instrumentsPlayed   String[]
  listingsCreated     GigListing[] @relation(name: "CreatedBy")
  listingsAttending   GigListing[] @relation(name: "Attending")
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @default(now())
}
